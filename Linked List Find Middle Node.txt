class LinkedList:
    def __init__(self):
        self.head = None
        
    def add_begin(self,data):
        new_node = Node(data)
        new_node.next = self.head
        self.head = new_node
        
    def find_middle(self):
        present_node = self.head
        size=0
        while present_node is not None:
            size = size + 1
            present_node = present_node.next
            
        present_node = self.head        
        for i in range (0,size//2,1):
            present_node = present_node.next
        print("Middle Node Data: ",present_node.data)
        
    def display(self):
        present_node = self.head
        while present_node is not None:
            print(present_node.data," ",end = '')
            present_node = present_node.next
        print("\n") 

class Node:
    def __init__(self,data):
        self.data = data
        self.next = None
        
LL = LinkedList()
LL.add_begin(6)
LL.add_begin(5)
LL.add_begin(4)
LL.add_begin(3)
LL.add_begin(2)
LL.add_begin(1)
LL.display()
LL.find_middle()
